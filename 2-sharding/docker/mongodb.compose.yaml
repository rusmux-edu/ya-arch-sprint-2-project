x-restart-policy: &restart_policy
  restart: on-failure:3

x-healthcheck-defaults: &healthcheck_defaults
  interval: 10s
  timeout: 1m
  start_period: 10s
  retries: 3

x-mongodb-shard-base: &mongodb_shard_base
  image: mongo
  <<: *restart_policy
  healthcheck:
    test: echo 'db.runCommand("ping").ok' | mongosh localhost:27018/test --quiet
    <<: *healthcheck_defaults

services:
  mongodb-configSrv:
    container_name: mongodb-configSrv
    image: mongo
    <<: *restart_policy
    volumes:
      - mongodb-configSrv-data:/data/db
    command: [--configsvr, --replSet, config-server, --bind_ip_all]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27019/test --quiet
      <<: *healthcheck_defaults

  mongos-router:
    container_name: mongos-router
    image: mongo
    <<: *restart_policy
    ports:
      - "27017:27017"
    command: [mongos, --configdb, config-server/mongodb-configSrv:27019, --bind_ip_all]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      <<: *healthcheck_defaults
      start_interval: 20s  # wait for the initialization script

  mongodb-shard-1-1:
    container_name: mongodb-shard-1-1
    <<: *mongodb_shard_base
    volumes:
      - mongodb-shard-1-1-data:/data/db
    command: [--shardsvr, --replSet, shard-1, --bind_ip_all]

  mongodb-shard-2-1:
    container_name: mongodb-shard-2-1
    <<: *mongodb_shard_base
    volumes:
      - mongodb-shard-2-1-data:/data/db
    command: [--shardsvr, --replSet, shard-2, --bind_ip_all]

  mongodb-init:
    container_name: mongodb-init
    depends_on:
      mongodb-configSrv:
        condition: service_started
      mongos-router:
        condition: service_started
      mongodb-shard-1-1:
        condition: service_started
      mongodb-shard-2-1:
        condition: service_started
    image: docker
    <<: *restart_policy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../scripts/mongodb-init.sh:/mongodb-init.sh
    command: [/mongodb-init.sh]

  mongo-express:
    container_name: mongo-express
    depends_on:
      mongos-router:
        condition: service_healthy
    image: mongo-express
    <<: *restart_policy
    profiles:
      - mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongos-router
      ME_CONFIG_BASICAUTH: false
    healthcheck:
      # does not resolve localhost
      test: nc -z 127.0.0.1:8081 || exit 1
      <<: *healthcheck_defaults

volumes:
  mongodb-configSrv-data:
  mongodb-shard-1-1-data:
  mongodb-shard-2-1-data:
